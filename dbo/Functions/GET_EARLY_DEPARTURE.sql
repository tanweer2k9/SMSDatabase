

CREATE function [dbo].[GET_EARLY_DEPARTURE](@STAFF_ID numeric, @early_minutes int, @FROM_DATE datetime,@TO_DATE datetime)
returns int
AS
BEGIN

declare @count int = 0

select @count = COUNT(*) from dbo.tf_Get_Early_Departure (@STAFF_ID, @early_minutes,@FROM_DATE,@TO_DATE)

--BEGIN
--declare @count int = 0
--declare @HD_ID numeric = 0
--declare @BR_ID numeric = 0

--declare @is_vacation_allowed bit = 0


--select @HD_ID = TECH_HD_ID, @BR_ID = TECH_BR_ID,@is_vacation_allowed =  TECH_IS_VACATION_ALLOWED from TEACHER_INFO where TECH_ID  = @STAFF_ID



--set @count = 
--(select COUNT(*) from (select ATTENDANCE_STAFF_DATE,ATTENDANCE_STAFF_TYPE_ID,ATTENDANCE_STAFF_TIME_IN,CAST( case when CountATTENDANCE_STAFF_TIME_OUT > 1 AND MinATTENDANCE_STAFF_TIME_OUT = '12:00:00 AM' THEN MaxATTENDANCE_STAFF_TIME_IN ELSE MaxATTENDANCE_STAFF_TIME_OUT END as time) ATTENDANCE_STAFF_TIME_OUT,ATTENDANCE_STAFF_REMARKS, ATTENDANCE_STAFF_CURRENT_TIME_OUT from
--(

--select ATTENDANCE_STAFF_DATE, MIN(CAST(ATTENDANCE_STAFF_TIME_IN as time)) ATTENDANCE_STAFF_TIME_IN, COUNT(ATTENDANCE_STAFF_TIME_OUT) CountATTENDANCE_STAFF_TIME_OUT,  MAX(CAST(ATTENDANCE_STAFF_TIME_OUT as time)) MaxATTENDANCE_STAFF_TIME_OUT,MAX(CAST(ATTENDANCE_STAFF_TIME_IN as time)) MaxATTENDANCE_STAFF_TIME_IN,MAX(ATTENDANCE_STAFF_TYPE_ID)ATTENDANCE_STAFF_TYPE_ID,
----(CAST( case when ATTENDANCE_STAFF_TIME_OUT = '12:00:00 AM' THEN ATTENDANCE_STAFF_TIME_IN ELSE ATTENDANCE_STAFF_TIME_OUT END as time)) ATTENDANCE_STAFF_TIME_OUT, 
--Min(CAST(ATTENDANCE_STAFF_TIME_OUT as time)) MinATTENDANCE_STAFF_TIME_OUT,MIN(ATTENDANCE_STAFF_REMARKS) ATTENDANCE_STAFF_REMARKS,MAX(CAST(ATTENDANCE_STAFF_CURRENT_TIME_OUT as time)) ATTENDANCE_STAFF_CURRENT_TIME_OUT from ATTENDANCE_STAFF where ATTENDANCE_STAFF_DATE between @FROM_DATE and @TO_DATE and ATTENDANCE_STAFF_TYPE_ID = @STAFF_ID
--group by ATTENDANCE_STAFF_DATE )A)B  where  

--ATTENDANCE_STAFF_DATE not in (	select all_days from (SELECT  CONVERT(date,@FROM_DATE+number) as all_days
--				FROM master..spt_values 
--				WHERE TYPE ='p'
--					AND DATEDIFF(d,@FROM_DATE,@TO_DATE) >= number
--					--and (@d1 + number) in (select distinct ATTENDANCE_STAFF_DATE from ATTENDANCE_STAFF) 
--					AND DATENAME(w,@FROM_DATE+number) in (select STAFF_WORKING_DAYS_NAME from STAFF_WORKING_DAYS where STAFF_WORKING_DAYS_STAFF_ID = @STAFF_ID and STAFF_WORKING_DAYS_DAY_STATUS = 'F'))A ) and 

--ATTENDANCE_STAFF_REMARKS not in ('LE', 'A') and DATEADD(Mi, @early_minutes,CONVERT(datetime, ATTENDANCE_STAFF_TIME_OUT)) <  CONVERT(datetime, ATTENDANCE_STAFF_CURRENT_TIME_OUT) and ATTENDANCE_STAFF_DATE not in (select dates from dbo.GET_ALL_LEAVES_DATE (@STAFF_ID,@FROM_DATE))
--and
--not exists
--(
--select SHORT_LEAVE_DATE from SHORT_LEAVE s where 
--B.ATTENDANCE_STAFF_TIME_OUT >= DATEADD(MINUTE,-5,CAST(s.SHORT_LEAVE_FROM_TIME as time))
--and s.SHORT_LEAVE_STAFF_ID = B.ATTENDANCE_STAFF_TYPE_ID and B.ATTENDANCE_STAFF_DATE = s.SHORT_LEAVE_DATE

--union

--select VacationDate from dbo.GET_ALL_VACATION_DATES (@HD_ID,@BR_ID,CAST(@FROM_DATE as date)) where B.ATTENDANCE_STAFF_DATE = CASE WHEN @is_vacation_allowed = 1 THEN VacationDate ELSE  '1900-01-01' END
--))

return @count

END